<?xml version='1.0' encoding='UTF-8'?>
<slide.exercise xmlns="https://ulearn.me/schema/v2" title="* Альтернативная задача (4)" id="e4cb97a3-84c8-441f-ad8b-7e295cfc37c9">
  <scoring group="homework" passedTestsScore="0" codeReviewScore="40"/>
  <defaultIncludeCodeFile>../_Code.java</defaultIncludeCodeFile>
  <markdown>
    ## Напишите построитель консольного графического интерфейса.

    Каждый тип элементов представьте в виде класса, ответственного за расчет положения и отрисовку компонентов.

    Для хранения дерева элементов используйте паттерн программирования (Компоновщик)[https://refactoring.guru/ru/design-patterns/composite].

    Алгоритм программы:

    - Создается структура вложенных друг в друга элементов
    - У корневого элемента вызывается вычисление размера, он рекурсивно вызывает вычисление размеров у вложенных элементов
    - У корневого элемента вызывается отрисовка, он рекурсивно вызывает отрисовку у вложенных элементов
    - Получившийся рисунок выводится в терминал

    ### Элементы интерфейса:

    #### Рамка (контейнер)

    Свойства

    - заголовок
    - вложенный элемент

    При вычислении размеров

    - Принимает размер вложенного элемента плюс 1 клетка для рамки
    - Добавляет отступы в 1 пустую клетку от левого и правого края вложенного элемента

    При отрисовке

    - Рисует рамку двойной линией с заголовком вокруг вложенного элемента

    #### Прямоугольник (контейнер)

    Свойства

    - вложенный элемент

    При вычислении размеров

    - Принимает размер вложенного элемента плюс 1 клетка для рамки
    - Добавляет отступы в 1 пустую клетку от левого и правого края вложенного элемента

    При отрисовке

    - Рисует рамку одинарной линией вокруг вложенного элемента

    #### Вертикальный компоновщик (контейнер)

    Свойства

    - список вложенных элементов

    При вычислении размеров

    - Устанавливает всем элементам горизонтальную позицию у левого края контейнера
    - Запрашивает у всех элементов минимальную ширину и устанавливает всем элементам максимальную из них
    - Запрашивает у всех элементов минимальную высоту и устанавливает вертикальную позицию друг под другом, без отступов

    При отрисовке

    - Вызывает отрисовку у всех вложенных элементов

    #### Горизонтальный компоновщик (контейнер)

    Свойства

    - список вложенных элементов

    При вычислении размеров

    - Устанавливает всем элементам вертикальную позицию у верхнего края контейнера
    - Запрашивает у всех элементов минимальную высоту и устанавливает всем элементам максимальную из них
    - Запрашивает у всех элементов минимальную ширину и устанавливает горизонтальную позицию друг за другом слева направо, с отступом в 1 клетку

    При отрисовке

    - Вызывает отрисовку у всех вложенных элементов

    #### Текст

    Свойства

    - текст

    При вычислении размеров

    - Занимает 1 клетку в высоту и нужное для текста количество клеток в ширину

    При отрисовке

    - Рисует текст без разрыва строки


    Пример работы программы:
    ```java
        Frame frame = new Frame("Login",
                new HorizontalLayout(
                        new VerticalLayout(
                                new Rectangle(new Text("User")),
                                new Rectangle(new Text("Password")),
                                new HorizontalLayout(
                                        new Rectangle(new Text("Ok")),
                                        new Rectangle(new Text("Cancel"))
                                )
                        ),
                        new Frame("Help",
                                new VerticalLayout(
                                        new Text("Please enter login"),
                                        new Text("  and password"),
                                        new Text("Then press Ok button")
                                )
                        )
                )
        );

        char[][] result = new char[frame.getWidth()][frame.getHeight()];
        frame.calculate();
        frame.draw(result);
        print(result);
    ```

    Результат:
    ```
    ╔═ Login ════════════════════════════════════╗
    ║ ┌───────────────┐ ╔═ Help ═══════════════╗ ║
    ║ │ User          │ ║ Please enter login   ║ ║
    ║ └───────────────┘ ║   and password       ║ ║
    ║ ┌───────────────┐ ║ Then press Ok button ║ ║
    ║ │ Password      │ ║                      ║ ║
    ║ └───────────────┘ ║                      ║ ║
    ║ ┌────┐ ┌────────┐ ║                      ║ ║
    ║ │ Ok │ │ Cancel │ ║                      ║ ║
    ║ └────┘ └────────┘ ╚══════════════════════╝ ║
    ╚════════════════════════════════════════════╝
    ```

  </markdown>
  <exercise.file>
    <initialCode>вставьте ссылку на репозиторий</initialCode>
    <hideExpectedOutput>true</hideExpectedOutput>
    <comment>Принято</comment>
    <expected>github.com</expected>
    <solution>Main</solution>
  </exercise.file>
</slide.exercise>
